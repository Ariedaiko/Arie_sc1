local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v88=v2(v0(v30,16));if v19 then local v109=v5(v88,v19);v19=nil;return v109;else return v88;end end end);local function v20(v31,v32,v33) if v33 then local v89=0 -(1065 -(68 + 997)) ;local v90;while true do if (v89==(1270 -(226 + 1044))) then v90=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + 201)))) ;return v90-(v90%(928 -((931 -717) + 713))) ;end end else local v91=0 + 0 ;local v92;while true do if (v91==(0 + 0)) then v92=(879 -(282 + 595))^(v32-(1638 -(1523 + 114))) ;return (((v31%(v92 + v92))>=v92) and (1 + 0)) or (0 -0) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(1 + (350 -(87 + 263)))) then return v35;end if (v34==(957 -(892 + (245 -(67 + 113))))) then v35=v1(v16,v18,v18);v18=v18 + (118 -(32 + 85)) ;v34=1 + 0 + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (4 -2) );v18=v18 + 2 + 0 ;return (v37 * (1017 -761)) + v36 ;end local function v23() local v38=(1251 -299) -(802 + 150) ;local v39;local v40;local v41;local v42;while true do if (v38==((1189 -(1069 + 118)) -(2 -1))) then return (v42 * (30433252 -13656036)) + (v41 * (47703 + 17833)) + (v40 * 256) + v39 ;end if (v38==(997 -(915 + 82))) then v39,v40,v41,v42=v1(v16,v18,v18 + (8 -5) );v18=v18 + 4 ;v38=1 + (0 -0) ;end end end local function v24() local v43=v23();local v44=v23();local v45=1 + 0 ;local v46=(v20(v44,1 -0 ,20 + 0 ) * ((793 -(368 + (1846 -(630 + 793))))^(100 -68))) + v43 ;local v47=v20(v44,87 -66 ,19 + (40 -28) );local v48=((v20(v44,50 -(10 + 8) )==(3 -2)) and  -1) or (3 -2) ;if (v47==(442 -(416 + 26))) then if (v46==(859 -(814 + 45))) then return v48 * (0 -(0 -0)) ;else v47=(2 + 1) -2 ;v45=0 + 0 ;end elseif (v47==2047) then return ((v46==(0 + 0)) and (v48 * ((1 -0)/(438 -(145 + 293))))) or (v48 * NaN) ;end return v8(v48,v47-(1817 -794) ) * (v45 + (v46/((432 -((151 -107) + 386))^(1538 -(998 + (2235 -(760 + 987))))))) ;end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(1913 -(1789 + 124))) then return "";end end v50=v3(v16,v18,(v18 + v49) -(767 -(745 + 21)) );v18=v18 + v49 ;local v51={};for v67=1 + 0 , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100) local v93=(function() return 0;end)();local v94=(function() return;end)();local v95=(function() return;end)();while true do if (v93== #"|") then if (v94== #"]") then v95=(function() return v96()~=(1509 -(663 + 846)) ;end)();elseif (v94==(2 -0)) then v95=(function() return v97();end)();elseif (v94== #"xnx") then v95=(function() return v98();end)();end v99[v100]=(function() return v95;end)();break;end if (0==v93) then local v115=(function() return 0;end)();local v116=(function() return;end)();while true do if (v115==(0 -0)) then v116=(function() return 0 + 0 ;end)();while true do if (1==v116) then v93=(function() return  #" ";end)();break;end if ((0 + 0)==v116) then v94=(function() return v96();end)();v95=(function() return nil;end)();v116=(function() return 397 -(115 + 281) ;end)();end end break;end end end end return v93,v94,v95,v96,v97,v98,v99,v100;end;end)();local v53=(function() return function(v101,v102,v103) local v104=(function() return 0;end)();local v105=(function() return;end)();while true do if (v104==0) then v105=(function() return 0;end)();while true do if (v105==0) then local v121=(function() return 0 -0 ;end)();while true do if (v121~=(0 + 0)) then else v101[v102-#"]" ]=(function() return v103();end)();return v101,v102,v103;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"<",v58 do FlatIdent_7366E,Type,Cons,v21,v24,v25,v59,v69=(function() return v52(FlatIdent_7366E,Type,Cons,v21,v24,v25,v59,v69);end)();end v57[ #"-19"]=(function() return v21();end)();for v70= #" ",v23() do local v71=(function() return 0;end)();local v72=(function() return;end)();while true do if (v71==0) then v72=(function() return v21();end)();if (v20(v72, #"!", #":")~=(0 -0)) then else local v117=(function() return 0;end)();local v118=(function() return;end)();local v119=(function() return;end)();local v120=(function() return;end)();while true do if (v117~=(10 -7)) then else if (v20(v119, #"nil", #"-19")~= #"|") then else v120[ #".com"]=(function() return v59[v120[ #".dev"]];end)();end v54[v70]=(function() return v120;end)();break;end if (v117==(868 -(550 + 317))) then v120=(function() return {v22(),v22(),nil,nil};end)();if (v118==(0 -0)) then local v126=(function() return 0;end)();local v127=(function() return;end)();while true do if (v126==0) then v127=(function() return 0;end)();while true do if (v127==0) then v120[ #"19("]=(function() return v22();end)();v120[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v118== #":") then v120[ #"-19"]=(function() return v23();end)();elseif (v118==(2 -0)) then v120[ #"xnx"]=(function() return v23() -((5 -3)^16) ;end)();elseif (v118== #"asd") then local v288=(function() return 285 -(134 + 151) ;end)();local v289=(function() return;end)();while true do if (v288~=0) then else v289=(function() return 0;end)();while true do if (v289==(1665 -(970 + 695))) then v120[ #"xxx"]=(function() return v23() -((3 -1)^(2006 -(582 + 1408))) ;end)();v120[ #"http"]=(function() return v22();end)();break;end end break;end end end v117=(function() return 6 -4 ;end)();end if (v117~=(2 -0)) then else if (v20(v119, #"[", #"~")== #"]") then v120[2]=(function() return v59[v120[2]];end)();end if (v20(v119,7 -5 ,2)== #"~") then v120[ #"asd"]=(function() return v59[v120[ #"19("]];end)();end v117=(function() return 1827 -(1195 + 629) ;end)();end if (v117==0) then local v123=(function() return 0 -0 ;end)();while true do if (v123==(242 -(187 + 54))) then v117=(function() return 781 -(162 + 618) ;end)();break;end if (v123==(0 + 0)) then v118=(function() return v20(v72,2 + 0 , #"xnx");end)();v119=(function() return v20(v72, #"http",6);end)();v123=(function() return 1 -0 ;end)();end end end end end break;end end end for v73= #">",v23() do v55,v73,v28=(function() return v53(v55,v73,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1 -0 ];local v65=v61[2];local v66=v61[1 + 2 ];return function(...) local v74=v64;local v75=v65;local v76=v66;local v77=v27;local v78=1637 -(1373 + 263) ;local v79= -((1827 -(802 + 24)) -(451 + 549));local v80={};local v81={...};local v82=v12("#",...) -(1 -0) ;local v83={};local v84={};for v106=0,v82 do if (v106>=v76) then v80[v106-v76 ]=v81[v106 + (1 -0) ];else v84[v106]=v81[v106 + (1 -0) ];end end local v85=(v82-v76) + (1 -0) ;local v86;local v87;while true do v86=v74[v78];v87=v86[1385 -(111 + 635 + 638) ];if ((v87<=(14 + 23)) or (4528<=699)) then if ((v87<=(27 -(7 + 2))) or (156>=3913)) then if (v87<=(349 -(36 + 182 + 123))) then if (v87<=(1584 -(1535 + 46))) then if ((195==195) and (v87<=(1 + 0))) then if (v87==(0 + 0 + 0)) then local v131=560 -(306 + 254) ;local v132;local v133;local v134;while true do if (v131==(2 -1)) then v134=v84[v132] + v133 ;v84[v132]=v134;v131=2;end if (v131==((3 -2) + 1)) then if (v133>(0 -(0 + 0))) then if (v134<=v84[v132 + (1468 -(899 + 568)) ]) then v78=v86[2 + 1 ];v84[v132 + (7 -4) ]=v134;end elseif (v134>=v84[v132 + (604 -(268 + 335)) ]) then v78=v86[3];v84[v132 + 3 ]=v134;end break;end if ((3105>=1796) and (v131==0)) then v132=v86[292 -(60 + 230) ];v133=v84[v132 + 2 ];v131=573 -(426 + 146) ;end end else v84[v86[1 + 1 ]]={};end elseif (v87==(1458 -(282 + 478 + 696))) then v84[v86[813 -(569 + 242) ]]=v86[(7 + 1) -5 ]~=(0 + 0 + 0) ;else do return;end end elseif (v87<=(1029 -(706 + 318))) then if (v87>((586 + 669) -(721 + 530))) then local v137=v86[2];local v138={};for v214=1272 -(945 + 326) , #v83 do local v215=v83[v214];for v229=1433 -(797 + 636) , #v215 do local v230=v215[v229];local v231=v230[2 -1 ];local v232=v230[2 + (0 -0) ];if ((v231==v84) and (v232>=v137)) then local v312=700 -(271 + 429) ;while true do if (v312==(0 + 0)) then v138[v232]=v231[v232];v230[1501 -((3027 -(1427 + 192)) + 92) ]=v138;break;end end end end end else v84[v86[1088 -(160 + 301 + 625) ]]=v84[v86[1291 -(993 + 295) ]];end elseif ((4379>=2131) and (v87<=(1 + 5))) then v84[v86[1173 -(418 + 753) ]][v84[v86[2 + 1 ]]]=v86[1 + 3 ];elseif ((3844>=2043) and (v87==(3 + 4))) then local v233=v86[1 + 1 ];v84[v233]=v84[v233](v84[v233 + (530 -((942 -536) + 123)) ]);elseif ((v84[v86[2]]==v84[v86[1773 -(1749 + 20) ]]) or (3232<=2731)) then v78=v78 + 1 ;else v78=v86[1 + 2 ];end elseif (v87<=13) then if (v87<=(1332 -(1249 + 73))) then if (v87>9) then local v143=0 + 0 ;local v144;while true do if (v143==(1145 -(466 + 679))) then v144=v86[2];v84[v144](v84[v144 + (2 -1) ]);break;end end else v84[v86[5 -3 ]]=v86[1903 -(106 + 1794) ];end elseif (v87<=(4 + 7)) then v84[v86[1 + 0 + 1 ]][v84[v86[8 -5 ]]]=v84[v86[10 -6 ]];elseif (v87>(126 -(2 + 2 + 110))) then local v235=584 -(57 + (853 -(192 + 134))) ;local v236;local v237;local v238;while true do if (v235==(1427 -(41 + 1386))) then v236=v86[(1381 -(316 + 960)) -(17 + 86) ];v237=v84[v236];v235=1 + 0 ;end if (1==v235) then v238=v86[(4 + 2) -3 ];for v358=2 -1 ,v238 do v237[v358]=v84[v236 + v358 ];end break;end end else local v239=166 -(122 + 44) ;local v240;local v241;local v242;while true do if (v239==(0 -0)) then v240=v86[6 -4 ];v241=v84[v240];v239=1 + 0 ;end if ((4905==4905) and (v239==(1 + 0))) then v242=v84[v240 + 2 ];if ((v242>(0 -0)) or (4136>=4411)) then if (v241>v84[v240 + (66 -(30 + 35)) ]) then v78=v86[3 + 0 ];else v84[v240 + (1260 -(1043 + 214)) ]=v241;end elseif (v241<v84[v240 + (3 -2) ]) then v78=v86[3];else v84[v240 + (1215 -(323 + 889)) ]=v241;end break;end end end elseif (v87<=(40 -25)) then if ((v87==(594 -(361 + 219))) or (2958==4017)) then v84[v86[322 -(53 + 207 + 60) ]][v86[1 + 2 ]]=v84[v86[417 -(15 + 398) ]];elseif  not v84[v86[984 -(18 + 964) ]] then v78=v78 + 1 ;else v78=v86[3];end elseif ((1228>=813) and (v87<=(60 -44))) then if ((v84[v86[2 + 0 ]]==v84[v86[3 + 1 ]]) or (3455>4050)) then v78=v78 + (851 -(20 + 830)) ;else v78=v86[3 + 0 ];end elseif ((243==243) and (v87>17)) then v84[v86[128 -(116 + 10) ]]=v86[1 + 2 ];elseif ((v86[2]==v84[v86[742 -(542 + 196) ]]) or (271>1572)) then v78=v78 + (1 -0) ;else v78=v86[1 + 0 + 2 ];end elseif (v87<=(14 + 13)) then if (v87<=(83 -61)) then if (v87<=(8 + 12)) then if ((2739<3293) and (v87>19)) then local v151=0;local v152;while true do if ((v151==(0 -0)) or (3942<1134)) then v152=v86[2];v84[v152]=v84[v152]();break;end end else v84[v86[4 -2 ]]=v84[v86[1554 -(1126 + 425) ]][v86[409 -((669 -(83 + 468)) + 287) ]];end elseif (v87==(82 -61)) then v63[v86[1124 -(118 + 1003) ]]=v84[v86[5 -3 ]];else local v157=v75[v86[380 -(142 + 235) ]];local v158;local v159={};v158=v10({},{__index=function(v216,v217) local v218=v159[v217];return v218[1][v218[9 -7 ]];end,__newindex=function(v219,v220,v221) local v222=0 + 0 ;local v223;while true do if (v222==(977 -(553 + 424))) then v223=v159[v220];v223[1 -0 ][v223[2 + 0 ]]=v221;break;end end end});for v224=1 + 0 ,v86[3 + 1 ] do v78=v78 + 1 ;local v225=v74[v78];if ((v225[1 + 0 ]==(3 + 1)) or (2693==4973)) then v159[v224-(2 -1) ]={v84,v225[1 + 2 ]};else v159[v224-((18 -14) -3) ]={v62,v225[1332 -(797 + 532) ]};end v83[ #v83 + 1 + 0 ]=v159;end v84[v86[1 + 1 ]]=v29(v157,v158,v63);end elseif (v87<=(39 -15)) then if (v87>(53 -30)) then if  not v84[v86[1204 -(373 + (2295 -1466)) ]] then v78=v78 + (732 -(476 + 255)) ;else v78=v86[1133 -(369 + 761) ];end else v84[v86[2]]=v62[v86[3]];end elseif (v87<=25) then v84[v86[2 + 0 ]][v86[5 -(327 -(45 + 280)) ]]=v86[4];elseif (v87==26) then v78=v86[5 -2 ];else v84[v86[240 -(64 + 174) ]][v86[1 + 2 ]]=v86[5 -1 ];end elseif (v87<=(368 -(144 + 192))) then if (v87<=(245 -(42 + 174))) then if (v87==(22 + 6)) then if (v84[v86[2 + 0 ]]~=v86[4]) then v78=v78 + 1 + 0 ;else v78=v86[1507 -(363 + 1141) ];end else v84[v86[1582 -(1183 + 397) ]]=v84[v86[8 -5 ]][v86[3 + 1 ]];end elseif ((2146==2146) and (v87<=30)) then local v167=0 + 0 ;local v168;local v169;while true do if ((v167==(1976 -(1913 + 60 + 2))) or (2244==3224)) then for v317=1, #v83 do local v318=v83[v317];for v347=0 + 0 , #v318 do local v348=0 -0 ;local v349;local v350;local v351;while true do if (v348==(1934 -(494 + 71 + 1368))) then v351=v349[2];if (((v350==v84) and (v351>=v168)) or (4904<=1916)) then v169[v351]=v350[v351];v349[3 -2 ]=v169;end break;end if (v348==0) then v349=v318[v347];v350=v349[1];v348=(607 + 1055) -(1477 + 184) ;end end end end break;end if ((90<=1065) and (v167==(0 -0))) then v168=v86[2 + 0 + 0 + 0 ];v169={};v167=857 -(564 + 292) ;end end elseif (v87>(53 -22)) then v84[v86[5 -3 ]]=v62[v86[3]];else local v254=v86[2];v84[v254](v13(v84,v254 + (305 -(244 + 60)) ,v86[(5 -2) + 0 ]));end elseif ((4802==4802) and (v87<=(510 -(41 + 435)))) then if ((v87==(1034 -(938 + 63))) or (2280<=511)) then v84[v86[2 + 0 ]]=v86[(3039 -(340 + 1571)) -(936 + 189) ]~=(0 + 0) ;v78=v78 + (1614 -(1565 + 48)) ;else local v171=v86[2];v84[v171](v84[v171 + 1 + 0 ]);end elseif (v87<=35) then if (v84[v86[1140 -(782 + 356) ]]~=v84[v86[271 -(176 + 91) ]]) then v78=v78 + (2 -1) ;else v78=v86[4 -1 ];end elseif (v87==(1128 -(975 + 117))) then v78=v86[1878 -(157 + 1718) ];else v84[v86[2 + 0 + 0 ]][v86[10 -7 ]]=v84[v86[13 -9 ]];end elseif ((v87<=(1074 -(697 + 321))) or (1676<=463)) then if (v87<=(125 -79)) then if (v87<=41) then if ((3869==3869) and (v87<=((1854 -(1733 + 39)) -43))) then if (v87>(87 -49)) then v84[v86[1 + 1 ]]=v63[v86[5 -2 ]];elseif v84[v86[5 -3 ]] then v78=v78 + (1228 -(322 + 905)) ;else v78=v86[614 -(602 + 9) ];end elseif (v87>(1229 -(449 + 740))) then local v174=872 -(826 + 46) ;local v175;local v176;local v177;while true do if (v174==1) then v177={};v176=v10({},{__index=function(v319,v320) local v321=947 -(245 + 702) ;local v322;while true do if (v321==0) then v322=v177[v320];return v322[3 -2 ][v322[2]];end end end,__newindex=function(v323,v324,v325) local v326=v177[v324];v326[1 + 0 ][v326[1900 -(260 + 1638) ]]=v325;end});v174=442 -(382 + 58) ;end if ((0 -0)==v174) then v175=v75[v86[3 + (0 -0) ]];v176=nil;v174=1035 -(125 + 909) ;end if ((1158<=2613) and ((3 -1)==v174)) then for v328=1,v86[11 -7 ] do v78=v78 + (1206 -(902 + 303)) ;local v329=v74[v78];if (v329[(1949 -(1096 + 852)) -0 ]==((5 + 4) -5)) then v177[v328-(1 + 0) ]={v84,v329[1693 -(1121 + 569) ]};else v177[v328-(215 -((30 -8) + 192)) ]={v62,v329[3]};end v83[ #v83 + (684 -(483 + 200)) ]=v177;end v84[v86[2]]=v29(v175,v176,v63);break;end end elseif v84[v86[1465 -(1404 + 59) ]] then v78=v78 + (2 -1) ;else v78=v86[3 -0 ];end elseif (v87<=(808 -(468 + 297))) then if ((v87>(604 -(334 + 222 + 6))) or (2364<=1999)) then for v227=v86[6 -4 ],v86[3] do v84[v227]=nil;end else local v178=0 -0 ;local v179;while true do if ((v178==(0 -0)) or (4922<194)) then v179=v86[1 + 1 ];v84[v179](v13(v84,v179 + (237 -(141 + 95)) ,v79));break;end end end elseif (v87<=(44 + 0)) then local v180=v86[(516 -(409 + 103)) -2 ];v84[v180](v13(v84,v180 + (2 -1) ,v79));elseif (v87>(11 + 34)) then if ((v86[5 -3 ]==v84[v86[3 + 1 ]]) or (2091<31)) then v78=v78 + 1 + 0 ;else v78=v86[4 -1 ];end else local v261=0 + 0 ;local v262;local v263;local v264;local v265;while true do if ((v261==(163 -(92 + 71))) or (2430>=4872)) then v262=v86[1 + 1 ];v263,v264=v77(v84[v262](v84[v262 + (1 -0) ]));v261=(1002 -(46 + 190)) -(574 + 191) ;end if (v261==(2 + 0)) then for v363=v262,v79 do v265=v265 + (2 -1) ;v84[v363]=v263[v265];end break;end if (v261==(1 + 0)) then v79=(v264 + v262) -1 ;v265=849 -(254 + 595) ;v261=128 -(55 + 71) ;end end end elseif (v87<=(66 -15)) then if (v87<=(1838 -(573 + 1217))) then if (v87>(130 -83)) then local v181=v86[1 + 1 ];v84[v181]=v84[v181](v13(v84,v181 + 1 ,v86[4 -1 ]));elseif (v84[v86[941 -((809 -(51 + 44)) + 225) ]]~=v84[v86[4]]) then v78=v78 + (2 -1) ;else v78=v86[3];end elseif (v87<=(67 -18)) then local v183=0 + 0 + 0 ;local v184;while true do if (0==v183) then v184=v86[2];v84[v184]=v84[v184](v84[v184 + (1 -0) ]);break;end end elseif (v87>((2173 -(1114 + 203)) -(118 + 688))) then local v267=(774 -(228 + 498)) -(25 + 5 + 18) ;local v268;while true do if (0==v267) then v268=v86[1 + 1 ];v84[v268]=v84[v268]();break;end end else v84[v86[(1044 + 844) -((1590 -(174 + 489)) + 959) ]][v84[v86[3]]]=v84[v86[4]];end elseif (v87<=(178 -125)) then if (v87>(784 -(16 + 716))) then v84[v86[2]]=v84[v86[3]];else v84[v86[(7 -4) -1 ]]();end elseif ((v87<=(151 -(11 + 86))) or (4770<1735)) then v84[v86[1907 -(830 + 1075) ]]={};elseif (v87==((658 -(303 + 221)) -79)) then local v271=v86[2];v84[v271]=v84[v271](v13(v84,v271 + (286 -(175 + 110)) ,v86[6 -3 ]));elseif ((v84[v86[9 -(1276 -(231 + 1038)) ]]==v86[(1500 + 300) -(503 + 1293) ]) or (4439<=2350)) then v78=v78 + (2 -1) ;else v78=v86[3 + 0 ];end elseif (v87<=(1127 -(810 + 251))) then if (v87<=(43 + 18)) then if (v87<=(18 + 40)) then if (v87>(52 + 5)) then local v188=533 -(43 + 490) ;local v189;local v190;local v191;while true do if ((v188==0) or (4479<4466)) then v189=v86[735 -(711 + 22) ];v190=v84[v189];v188=3 -2 ;end if (v188==(860 -(240 + 619))) then v191=v86[3];for v333=(1163 -(171 + 991)) + (0 -0) ,v191 do v190[v333]=v84[v189 + v333 ];end break;end end else v63[v86[4 -1 ]]=v84[v86[1 + 1 ]];end elseif (v87<=(1803 -((3608 -2264) + (998 -598)))) then v84[v86[407 -(255 + 150) ]]=v84[v86[3 + 0 ]][v84[v86[3 + 0 + 1 ]]];elseif (v87==(256 -196)) then v84[v86[6 -4 ]]();else for v307=v86[(6102 -4361) -(404 + 1335) ],v86[409 -(183 + 223) ] do v84[v307]=nil;end end elseif ((2547>1225) and (v87<=(76 -13))) then if (v87==(42 + 20)) then v84[v86[2]]=v84[v86[2 + 1 ]][v84[v86[341 -(10 + (942 -615)) ]]];else v84[v86[2 + 0 ]]=v63[v86[3]];end elseif (v87<=(402 -(118 + 220))) then local v200=v86[1 + 1 ];v84[v200](v13(v84,v200 + (450 -(108 + 341)) ,v86[3]));elseif ((4671>2674) and (v87==(30 + 35))) then v84[v86[8 -6 ]]=v86[1496 -(711 + 782) ]~=(0 -0) ;v78=v78 + 1 ;else local v274=v86[4 -1 ];local v275=v84[v274];for v309=v274 + (470 -(270 + 199)) ,v86[4] do v275=v275   .. v84[v309] ;end v84[v86[(3 -2) + 1 ]]=v275;end elseif (v87<=(1890 -(580 + 1239))) then if (v87<=(202 -(1382 -(111 + 1137)))) then if (v87==(65 + 2)) then local v201=v86[160 -(91 + 67) ];local v202=v84[v201 + 2 ];local v203=v84[v201] + v202 ;v84[v201]=v203;if ((v202>0) or (3696<3327)) then if (v203<=v84[v201 + 1 + 0 ]) then local v336=0 + (0 -0) ;while true do if (v336==(0 -(0 + 0))) then v78=v86[526 -(423 + 100) ];v84[v201 + 3 ]=v203;break;end end end elseif (v203>=v84[v201 + 1 + 0 ]) then local v337=1167 -(645 + 4 + 518) ;while true do if ((v337==((4956 -3166) -(1010 + 780))) or (4542==2970)) then v78=v86[3 + 0 ];v84[v201 + 3 ]=v203;break;end end end else local v205=0 -0 ;local v206;local v207;local v208;local v209;while true do if (v205==(0 -0)) then v206=v86[2];v207,v208=v77(v84[v206](v84[v206 + (1837 -(1045 + 413 + 378)) ]));v205=2 -1 ;end if (2==v205) then for v338=v206,v79 do local v339=0 -0 ;while true do if (v339==(505 -(351 + 154))) then v209=v209 + (1575 -(1281 + 293)) ;v84[v338]=v207[v209];break;end end end break;end if (v205==(267 -(28 + (1009 -(326 + 445))))) then v79=(v208 + v206) -(2 -1) ;v209=1559 -((6026 -4645) + 178) ;v205=2 + 0 ;end end end elseif ((252<=1977) and (v87<=(56 + 13))) then v84[v86[1 + 1 ]][v84[v86[6 -3 ]]]=v86[13 -9 ];elseif ((v87==((86 -49) + 33)) or (1436==3775)) then local v277=470 -(381 + 89) ;local v278;local v279;while true do if ((v277==(1 + 0)) or (1618<930)) then for v366=v278 + 1 + (711 -(530 + 181)) ,v86[6 -2 ] do v279=v279   .. v84[v366] ;end v84[v86[2]]=v279;break;end if (v277==(881 -(614 + 267))) then v278=v86[35 -(19 + 13) ];v279=v84[v278];v277=(1883 -726) -(1074 + 82) ;end end else local v280=v86[3 -1 ];local v281=v84[v280];local v282=v84[v280 + (1786 -(214 + 1570)) ];if (v282>(1455 -((2307 -1317) + 465))) then if ((4723>4153) and (v281>v84[v280 + 1 + 0 ])) then v78=v86[2 + 1 ];else v84[v280 + 3 ]=v281;end elseif ((v281<v84[v280 + 1 + 0 ]) or (3654>=4654)) then v78=v86[8 -5 ];else v84[v280 + (11 -8) ]=v281;end end elseif (v87<=(1799 -(1668 + 58))) then if (v87>72) then if (v84[v86[2]]~=v86[4]) then v78=v78 + (627 -(512 + 114)) ;else v78=v86[3];end else do return;end end elseif (v87<=(192 -118)) then v84[v86[3 -1 ]]=v86[10 -7 ]~=(0 + 0 + 0) ;elseif (v87==((26 -11) + 60)) then local v284=v86[2 + 0 ];local v285=v84[v284];for v311=v284 + (3 -2) ,v86[3] do v7(v285,v84[v311]);end elseif (v84[v86[1996 -(109 + 1885) ]]==v86[4]) then v78=v78 + (1470 -(1269 + 200)) ;else v78=v86[5 -2 ];end v78=v78 + (816 -(98 + 717)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);